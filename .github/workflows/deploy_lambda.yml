name: Deploy SAM Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install AWS CLI and SAM CLI
      - name: Install AWS CLI and SAM CLI
        run: |
          pip install awscli aws-sam-cli

      # Step 4: Configure AWS credentials for deployment
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # Step 5: Build the SAM application
      - name: Build with SAM
        run: |
          cd ./sam_lambda/app-74
          sam build

      # Step 6: Deploy the SAM application, handle "No changes to deploy" gracefully
      - name: Deploy with SAM
        id: sam_deploy
        run: |
          cd ./sam_lambda/app-74
          sam deploy --no-confirm-changeset --stack-name img-generator-sam --capabilities CAPABILITY_IAM || echo "DEPLOYMENT_ERROR" > deployment_status.txt

      # Step 7: Handle Deployment Outcome
      - name: Handle Deployment Outcome
        if: always()  # Always run this step to interpret the outcome of previous deployment
        run: |
          cd ./sam_lambda/app-74
          if grep -q "DEPLOYMENT_ERROR" deployment_status.txt; then
            DEPLOY_OUTPUT=$(sam deploy --no-confirm-changeset --stack-name img-generator-sam --capabilities CAPABILITY_IAM 2>&1 || true)
            if echo "$DEPLOY_OUTPUT" | grep -q "No changes to deploy"; then
              echo "No changes to deploy. Marking as successful."
              exit 0
            else
              echo "Deployment failed. Exiting with error."
              echo "$DEPLOY_OUTPUT"
              exit 1
            fi
          else
            echo "Deployment completed successfully."
